<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="rmsuserrole">

  <resultMap id="BaseResultMap" type="com.huaxia.rms.core.model.RmsUserRole">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="memo" jdbcType="VARCHAR" property="memo" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="delete_time" jdbcType="TIMESTAMP" property="deleteTime" />
    <result column="delete_user" jdbcType="VARCHAR" property="deleteUser" />
    <result column="delete_mark" jdbcType="INTEGER" property="deleteMark" />

    <association property="user" javaType="com.huaxia.rms.core.model.RmsUser" column="user_id" select="selectUserByUid" />

  </resultMap>

  <select id="selectUserByUid" resultType="com.huaxia.rms.core.model.RmsUser" parameterType="java.lang.Integer">
    <!--select * from t_rms_user WHERE enabled = 1 and id = #{user_id} 删除用户后需要清除角色内容-->
    select id AS id, code AS code, name AS name, realname AS realname, org_name AS orgName from t_rms_user WHERE id = #{user_id}
  </select>

  <sql id="Base_Column_List">
    id, user_id, role_id, memo, create_time, create_user, update_time, update_user, delete_time, 
    delete_user, delete_mark
  </sql>
  
  <select id="selectById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_rms_user_role
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <delete id="delete" parameterType="java.lang.Integer">
    delete from t_rms_user_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <insert id="insert" parameterType="com.huaxia.rms.core.model.RmsUserRole">
    insert into t_rms_user_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="memo != null">
        memo,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="deleteUser != null">
        delete_user,
      </if>
      <if test="deleteMark != null">
        delete_mark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="memo != null">
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteUser != null">
        #{deleteUser,jdbcType=VARCHAR},
      </if>
      <if test="deleteMark != null">
        #{deleteMark,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  
  <update id="update" parameterType="com.huaxia.rms.core.model.RmsUserRole">
    update t_rms_user_role
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="memo != null">
        memo = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteUser != null">
        delete_user = #{deleteUser,jdbcType=VARCHAR},
      </if>
      <if test="deleteMark != null">
        delete_mark = #{deleteMark,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="selectUserRoleList" resultMap="BaseResultMap" parameterType="java.util.Map">
    select <include refid="Base_Column_List" />
    from t_rms_user_role
    where delete_mark = 1
    <if test="userId != null and userId != 0 " >
      and user_id = #{userId,jdbcType=INTEGER}
    </if>
    <if test="roleId != null and roleId != 0">
      and role_id = #{roleId,jdbcType=INTEGER}
    </if>
    order by create_time desc
    limit #{start}, #{limit}
  </select>

  <select id="selectUserRoleListCount" parameterType="java.util.Map" resultType="java.lang.String">
    select count(id) urcount
    from t_rms_user_role
    where delete_mark = 1
    <if test="userId != null and userId != 0 " >
      and user_id = #{userId,jdbcType=INTEGER}
    </if>
    <if test="roleId != null and roleId != 0">
      and role_id = #{roleId,jdbcType=INTEGER}
    </if>
  </select>

  <update id="deleteUserRole" parameterType="java.util.Map">
    update t_rms_user_role set delete_time = now(), delete_user = #{username,jdbcType=VARCHAR}, delete_mark = 0
    where id in
    <foreach item="item" index="index" collection="ids" open="(" separator="," close=")">
      #{item}
    </foreach>
  </update>

  <select id="selectUnselectedUser" resultType="com.huaxia.rms.core.model.RmsUser" parameterType="java.lang.Integer">
    select id AS id, code AS code, name AS name, realname AS realname, org_name AS orgName
    from t_rms_user where enabled = 1 and id not in (
      select user_id from t_rms_user_role where delete_mark = 1 and role_id = #{roleId,jdbcType=INTEGER}
    )
    <if test="realname != null and realname != ''">
      and realname like concat(concat('%',#{realname,jdbcType=VARCHAR}),'%')
    </if>
    order by create_time desc
    limit #{start}, #{limit}
  </select>

  <select id="selectUnselectedUserCount" resultType="com.huaxia.rms.core.model.RmsUser" parameterType="java.lang.Integer">
    select count(u.id) usercount
    from t_rms_user u where u.enabled = 1 and u.id not in (
      select user_id from t_rms_user_role where delete_mark = 1 and role_id = #{roleId,jdbcType=INTEGER}
    )
  </select>

  <insert id="addTrainRecordBatch" useGeneratedKeys="true" parameterType="java.util.List">
    <selectKey resultType="long" keyProperty="id" order="AFTER">
      SELECT
      LAST_INSERT_ID()
    </selectKey>
    insert into t_rms_user_role (user_id, role_id, create_user)
    values
    <foreach collection="list" item="item" index="index" separator="," >
      (#{item.userId},#{item.roleId},#{item.createUser})
    </foreach>
  </insert>

  <select id="selectUserRoleByParam" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from t_rms_user_role
    where delete_mark = 1
    <if test="userId != null and userId != 0 " >
      and user_id = #{userId,jdbcType=INTEGER}
    </if>
    <if test="roleId != null and roleId != 0">
      and role_id = #{roleId,jdbcType=INTEGER}
    </if>
    order by create_time desc
  </select>

  <update id="deleteUserRoleByUid" parameterType="java.util.Map">
    update t_rms_user_role set delete_time = now(), delete_user = #{username,jdbcType=VARCHAR}, delete_mark = 0
    where user_id = #{userId,jdbcType=INTEGER}
  </update>

</mapper>