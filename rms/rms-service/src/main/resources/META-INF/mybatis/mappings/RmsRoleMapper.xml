<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="rmsrole">
  
  <resultMap id="BaseResultMap" type="com.huaxia.rms.core.model.RmsRole">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="parent_code" jdbcType="VARCHAR" property="parentCode" />
    <result column="parent_name" jdbcType="VARCHAR" property="parentName" />
    <result column="sys_code" jdbcType="VARCHAR" property="sysCode" />
    <result column="org_code" jdbcType="VARCHAR" property="orgCode" />
    <result column="category" jdbcType="INTEGER" property="category" />
    <result column="sort_code" jdbcType="INTEGER" property="sortCode" />
    <result column="memo" jdbcType="VARCHAR" property="memo" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="delete_time" jdbcType="TIMESTAMP" property="deleteTime" />
    <result column="delete_user" jdbcType="VARCHAR" property="deleteUser" />
    <result column="delete_mark" jdbcType="INTEGER" property="deleteMark" />
  </resultMap>
  
  <sql id="Base_Column_List">
    id, code, name, parent_code, parent_name, sys_code, org_code, category, sort_code, memo, create_time,
    create_user, update_time, update_user, delete_time, delete_user, delete_mark
  </sql>
  
  <delete id="delete" parameterType="java.lang.Integer">
    delete from t_rms_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <insert id="insert" parameterType="com.huaxia.rms.core.model.RmsRole">
    insert into t_rms_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="parentCode != null">
        parent_code,
      </if>
      <if test="parentName != null">
        parent_name,
      </if>

      <if test="sysCode != null">
        sys_code,
      </if>
      <if test="orgCode != null">
        org_code,
      </if>
      <if test="category != null">
        category,
      </if>
      <if test="sortCode != null">
        sort_code,
      </if>
      <if test="memo != null">
        memo,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="deleteUser != null">
        delete_user,
      </if>
      <if test="deleteMark != null">
        delete_mark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="parentCode != null">
        #{parentCode,jdbcType=VARCHAR},
      </if>
      <if test="parentName != null">
         #{parentName,jdbcType=VARCHAR},
      </if>
      <if test="sysCode != null">
        #{sysCode,jdbcType=VARCHAR},
      </if>
      <if test="orgCode != null">
        #{orgCode,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        #{category,jdbcType=INTEGER},
      </if>
      <if test="sortCode != null">
        #{sortCode,jdbcType=INTEGER},
      </if>
      <if test="memo != null">
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteUser != null">
        #{deleteUser,jdbcType=VARCHAR},
      </if>
      <if test="deleteMark != null">
        #{deleteMark,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  
  <update id="update" parameterType="com.huaxia.rms.core.model.RmsRole">
    update t_rms_role
    <set>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="parentCode != null">
        parent_code = #{parentCode,jdbcType=VARCHAR},
      </if>
      <if test="parentName != null">
        parent_name = #{parentName,jdbcType=VARCHAR},
      </if>
      <if test="sysCode != null">
        sys_code = #{sysCode,jdbcType=VARCHAR},
      </if>
      <if test="orgCode != null">
        org_code = #{orgCode,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        category = #{category,jdbcType=INTEGER},
      </if>
      <if test="sortCode != null">
        sort_code = #{sortCode,jdbcType=INTEGER},
      </if>
      <if test="memo != null">
        memo = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteUser != null">
        delete_user = #{deleteUser,jdbcType=VARCHAR},
      </if>
      <if test="deleteMark != null">
        delete_mark = #{deleteMark,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="selectAll" resultMap="BaseResultMap">
    select id, code, name, parent_code, parent_name, sys_code, org_code, category, sort_code, memo,
    create_time, create_user, update_time, update_user, delete_time, delete_user, delete_mark
    from t_rms_role where delete_mark = 1 and category = 0
  </select>

  <select id="selectById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_rms_role
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectByCode" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_rms_role
    where code = #{code,jdbcType=VARCHAR}

  </select>

  <select id="selectUserRoleByUid" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select r.id as id, r.code AS code, r.name AS name, r.parent_code AS parentCode, r.parent_name AS parentName, r.sys_code AS sysCode,
    r.org_code AS orgCode, r.category AS category, r.sort_code AS sortCode, r.memo AS memo, r.create_time AS createTime
    from t_rms_user_role ur
    left join t_rms_role r on ur.role_id = r.id
    left join t_rms_user u on ur.user_id = u.id
    where r.delete_mark = 1 and ur.delete_mark = 1 and u.enabled = 1
    and u.id = #{id,jdbcType=INTEGER}
    order by r.sort_code
  </select>

  <select id="selectRoleList" parameterType="java.util.Map" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from t_rms_role
    where delete_mark = 1 and category = 0
    <if test="parentCode != null and parentCode != ''">
      and parent_code = #{parentCode,jdbcType=VARCHAR}
    </if>
    <if test="name != null and name != ''">
      and name like concat(concat('%',#{name,jdbcType=VARCHAR}),'%')
    </if>
    order by create_time desc
    limit #{start}, #{limit}
  </select>

  <select id="selectRoleListCount" parameterType="java.util.Map" resultType="java.lang.String">
    select count(code) rolecount
    from t_rms_role
    where delete_mark = 1 and category = 0
    <if test="parentCode != null and parentCode != ''">
      and parent_code = #{parentCode,jdbcType=VARCHAR}
    </if>
    <if test="name != null and name != ''">
      and name like concat(concat('%',#{name,jdbcType=VARCHAR}),'%')
    </if>
  </select>

  <select id="selectParentDirectoryList" resultMap="BaseResultMap">
    select id, code, name, parent_code, parent_name, sys_code, org_code, category, sort_code, memo,
    create_time, create_user, update_time, update_user, delete_time, delete_user, delete_mark
    from t_rms_role where delete_mark = 1 and category = 1
  </select>

  <select id="selectMaxCodeByParentCode" parameterType="java.lang.String" resultType="java.lang.String">
    select max(code) code from t_rms_role where parent_code = #{parentCode,jdbcType=VARCHAR}
  </select>

  <select id="referByRole" parameterType="java.lang.String" resultType="java.util.HashMap">
    select name from t_rms_role where parent_code = #{code,jdbcType=VARCHAR}
  </select>



  <select id="selectRoleListByUid" parameterType="java.util.Map" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from t_rms_role
    where delete_mark = 1 and category = 0
    and id in(
      select DISTINCT(role_id) from t_rms_role_permission where delete_mark = 1 and resource_id in(
        select resource_id from t_rms_role_permission where delete_mark = 1 and role_id in
        (select role_id from t_rms_user_role where user_id = #{userId,jdbcType=INTEGER} and delete_mark = 1)
      )
    )
    <if test="parentCode != null and parentCode != ''">
      and parent_code = #{parentCode,jdbcType=VARCHAR}
    </if>
    <if test="name != null and name != ''">
      and name like concat(concat('%',#{name,jdbcType=VARCHAR}),'%')
    </if>
    order by create_time desc
    limit #{start}, #{limit}
  </select>

  <select id="selectRoleListByUidCount" parameterType="java.util.Map" resultType="java.lang.String">
    select count(code) rolecount
    from t_rms_role
    where delete_mark = 1 and category = 0
    and id in(
      select DISTINCT(role_id) from t_rms_role_permission where delete_mark = 1 and resource_id in(
        select resource_id from t_rms_role_permission where delete_mark = 1 and role_id in
        (select role_id from t_rms_user_role where user_id = #{userId,jdbcType=INTEGER} and delete_mark = 1)
      )
    )
    <if test="parentCode != null and parentCode != ''">
      and parent_code = #{parentCode,jdbcType=VARCHAR}
    </if>
    <if test="name != null and name != ''">
      and name like concat(concat('%',#{name,jdbcType=VARCHAR}),'%')
    </if>
  </select>

</mapper>