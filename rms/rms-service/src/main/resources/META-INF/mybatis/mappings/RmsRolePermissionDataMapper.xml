<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="rmsrolepermissiondata">
  
  <resultMap id="BaseResultMap" type="com.huaxia.rms.core.model.RmsRolePermissionData">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="resource_id" jdbcType="INTEGER" property="resourceId" />
    <result column="func_key" jdbcType="VARCHAR" property="funcKey" />
    <result column="func_value" jdbcType="VARCHAR" property="funcValue" />
    <result column="func_operator" jdbcType="VARCHAR" property="funcOperator" />
    <result column="class_type" jdbcType="VARCHAR" property="classType" />
    <result column="sort_code" jdbcType="INTEGER" property="sortCode" />
    <result column="memo" jdbcType="VARCHAR" property="memo" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="delete_time" jdbcType="TIMESTAMP" property="deleteTime" />
    <result column="delete_user" jdbcType="VARCHAR" property="deleteUser" />
    <result column="delete_mark" jdbcType="INTEGER" property="deleteMark" />
  </resultMap>
  
  <sql id="Base_Column_List">
    id, role_id, resource_id, func_key, func_value, func_operator, class_type, sort_code, 
    memo, create_time, create_user, update_time, update_user, delete_time, delete_user, 
    delete_mark
  </sql>
  
  <delete id="delete" parameterType="java.lang.Integer">
    delete from t_rms_role_permission_data
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <insert id="insert" parameterType="com.huaxia.rms.core.model.RmsRolePermissionData">
    insert into t_rms_role_permission_data
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="resourceId != null">
        resource_id,
      </if>
      <if test="funcKey != null">
        func_key,
      </if>
      <if test="funcValue != null">
        func_value,
      </if>
      <if test="funcOperator != null">
        func_operator,
      </if>
      <if test="classType != null">
        class_type,
      </if>
      <if test="sortCode != null">
        sort_code,
      </if>
      <if test="memo != null">
        memo,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="deleteUser != null">
        delete_user,
      </if>
      <if test="deleteMark != null">
        delete_mark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="resourceId != null">
        #{resourceId,jdbcType=INTEGER},
      </if>
      <if test="funcKey != null">
        #{funcKey,jdbcType=VARCHAR},
      </if>
      <if test="funcValue != null">
        #{funcValue,jdbcType=VARCHAR},
      </if>
      <if test="funcOperator != null">
        #{funcOperator,jdbcType=VARCHAR},
      </if>
      <if test="classType != null">
        #{classType,jdbcType=VARCHAR},
      </if>
      <if test="sortCode != null">
        #{sortCode,jdbcType=INTEGER},
      </if>
      <if test="memo != null">
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteUser != null">
        #{deleteUser,jdbcType=VARCHAR},
      </if>
      <if test="deleteMark != null">
        #{deleteMark,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  
  <update id="update" parameterType="com.huaxia.rms.core.model.RmsRolePermissionData">
    update t_rms_role_permission_data
    <set>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="resourceId != null">
        resource_id = #{resourceId,jdbcType=INTEGER},
      </if>
      <if test="funcKey != null">
        func_key = #{funcKey,jdbcType=VARCHAR},
      </if>
      <if test="funcValue != null">
        func_value = #{funcValue,jdbcType=VARCHAR},
      </if>
      <if test="funcOperator != null">
        func_operator = #{funcOperator,jdbcType=VARCHAR},
      </if>
      <if test="classType != null">
        class_type = #{classType,jdbcType=VARCHAR},
      </if>
      <if test="sortCode != null">
        sort_code = #{sortCode,jdbcType=INTEGER},
      </if>
      <if test="memo != null">
        memo = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteUser != null">
        delete_user = #{deleteUser,jdbcType=VARCHAR},
      </if>
      <if test="deleteMark != null">
        delete_mark = #{deleteMark,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_rms_role_permission_data
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectAll" resultMap="BaseResultMap">
    select id, role_id, resource_id, func_key, func_value, func_operator, class_type, 
    sort_code, memo, create_time, create_user, update_time, update_user, delete_time, 
    delete_user, delete_mark
    from t_rms_role_permission_data
  </select>

  <select id="selectRolePermissionDataByParam" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from t_rms_role_permission_data
    where delete_mark = 1
    <if test="roleId != null and roleId != 0">
      and role_id = #{roleId,jdbcType=INTEGER}
    </if>
    <if test="resourceId != null and resourceId != 0 " >
      and resource_id = #{resourceId,jdbcType=INTEGER}
    </if>
    order by create_time desc
  </select>

  <insert id="addTrainRecordBatch" useGeneratedKeys="true" parameterType="java.util.List">
    <selectKey resultType="long" keyProperty="id" order="AFTER">
      SELECT
      LAST_INSERT_ID()
    </selectKey>
    insert into t_rms_role_permission_data (role_id, resource_id, func_key, func_value, func_operator, class_type, sort_code, memo, create_user)
    values
    <foreach collection="list" item="item" index="index" separator="," >
      (#{item.roleId}, #{item.resourceId}, #{item.funcKey}, #{item.funcValue}, #{item.funcOperator}, #{item.classType}, #{item.sortCode}, #{item.memo}, #{item.createUser})
    </foreach>
  </insert>

  <update id="deleteRolePermissionData" parameterType="java.util.Map">
    update t_rms_role_permission_data set delete_time = now(), delete_user = #{username,jdbcType=VARCHAR}, delete_mark = 0
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>

  <select id="selectPermissionDatalist" resultMap="BaseResultMap" parameterType="java.util.Map">
    select <include refid="Base_Column_List" />
    from t_rms_role_permission_data
    where delete_mark = 1
    <if test="roleId != null and roleId != 0">
      and role_id = #{roleId,jdbcType=INTEGER}
    </if>
    <if test="resourceId != null and resourceId != 0 " >
      and resource_id = #{resourceId,jdbcType=INTEGER}
    </if>
    order by create_time desc
    limit #{start}, #{limit}
  </select>

  <select id="selectPermissionDatalistCount" resultType="java.lang.String" parameterType="java.util.Map">
    select count(id) rpdcount
    from t_rms_role_permission_data
    where delete_mark = 1
    <if test="roleId != null and roleId != 0">
      and role_id = #{roleId,jdbcType=INTEGER}
    </if>
    <if test="resourceId != null and resourceId != 0 " >
      and resource_id = #{resourceId,jdbcType=INTEGER}
    </if>
  </select>

</mapper>